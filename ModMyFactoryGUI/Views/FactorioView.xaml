<!--
Copyright (C) 2020 Mathis Rech

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
-->

<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:l="clr-namespace:ModMyFactoryGUI.Localization"
             xmlns:models="clr-namespace:ModMyFactoryGUI.ViewModels"
             x:Class="ModMyFactoryGUI.Views.FactorioView">

  <UserControl.Resources>
    <sys:Boolean x:Key="FalseValue">False</sys:Boolean>
    <sys:Boolean x:Key="TrueValue">True</sys:Boolean>
  </UserControl.Resources>

  <Border BorderThickness="1" BorderBrush="{DynamicResource ThemeBorderMidBrush}">
    <Grid Margin="4" ColumnDefinitions="*,Auto,Auto" RowDefinitions="*,Auto">

      <ListBox Margin="4" Items="{Binding Instances}" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0">
        <ListBox.ItemTemplate>
          <DataTemplate DataType="{x:Type models:FactorioInstanceViewModel}">
            <Grid ColumnDefinitions="Auto,*" RowDefinitions="Auto,Auto">
              <Image Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Margin="2" Source="{Binding Icon}" Width="40" Height="40" Stretch="UniformToFill" />

              <TextBlock Grid.Column="1" Grid.Row="0" Margin="6,2" Classes="h2" Text="{Binding Name}" IsVisible="{Binding IsInstalled}" />
              <TextBlock Grid.Column="1" Grid.Row="1" Margin="6,0,6,4" Classes="muted" Text="{Binding Version, StringFormat=Factorio {0}}" IsVisible="{Binding IsInstalled}" />

              <ProgressBar Grid.Column="1" Grid.Row="0" Margin="6,2"
                           IsIndeterminate="{Binding IsExtracting}" IsVisible="{Binding !IsInstalled}"
                           Minimum="0" Maximum="1" Value="{Binding DownloadProgress}" />

              <TextBlock Grid.Column="1" Grid.Row="1" Margin="6,0,6,4" Classes="muted" IsVisible="{Binding IsInDownloadQueue}" Text="{l:LocalizedResource InDownloadQueueText}" />
              <TextBlock Grid.Column="1" Grid.Row="1" Margin="6,0,6,4" Classes="muted" IsVisible="{Binding IsDownloading}" Text="{l:LocalizedResource DownloadingText}" />
              <TextBlock Grid.Column="1" Grid.Row="1" Margin="6,0,6,4" Classes="muted" IsVisible="{Binding IsExtracting}" Text="{l:LocalizedResource ExtractingText}" />

            </Grid>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>

      <StackPanel Grid.Column="1" Grid.Row="1" Margin="4" Orientation="Horizontal">
        <Button Content="{l:LocalizedResource DownloadStableButton}" Command="{Binding DownloadCommand}" CommandParameter="{StaticResource FalseValue}" />
        <Rectangle Width="1" />
        <ToggleButton>
          <Grid>
            <Path Stroke="{DynamicResource ThemeForegroundBrush}" StrokeThickness="1.5" Data="M0,0 4.5,5 9,0" />
            <Popup StaysOpen="True" ObeyScreenEdges="True" PlacementMode="Bottom"
                   PlacementTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}"
                   IsOpen="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Mode=TwoWay}">
              <Button Content="{l:LocalizedResource DownloadExperimentalButton}" Command="{Binding DownloadCommand}" CommandParameter="{StaticResource TrueValue}" />
            </Popup>
          </Grid>
        </ToggleButton>
      </StackPanel>

      <StackPanel Grid.Column="2" Grid.Row="1" Margin="4" Orientation="Horizontal">
        <Button Content="{l:LocalizedResource ImportInstallationButton}" Command="{Binding ImportCommand}" CommandParameter="{StaticResource FalseValue}" />
        <Rectangle Width="1" />
        <ToggleButton>
          <Grid>
            <Path Stroke="{DynamicResource ThemeForegroundBrush}" StrokeThickness="1.5" Data="M0,0 4.5,5 9,0" />
            <Popup StaysOpen="True" ObeyScreenEdges="True" PlacementMode="Bottom"
                   PlacementTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}"
                   IsOpen="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Mode=TwoWay}">
              <Button Content="{l:LocalizedResource ImportArchiveButton}" Command="{Binding ImportCommand}" CommandParameter="{StaticResource TrueValue}" />
            </Popup>
          </Grid>
        </ToggleButton>
      </StackPanel>
    </Grid>
  </Border>

</UserControl>
